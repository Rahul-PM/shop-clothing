{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\learn\\\\shop-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(clearCartOnSignOut),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(onSignOutSuccess),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(cartSaga);import{takeLatest,call,all,put}from'redux-saga/effects';import userActionTypes from'../user/user.types';import{clearCart}from'./cart.actions';export function clearCartOnSignOut(){return _regeneratorRuntime.wrap(function clearCartOnSignOut$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(clearCart());case 2:case\"end\":return _context.stop();}}},_marked);}export function onSignOutSuccess(){return _regeneratorRuntime.wrap(function onSignOutSuccess$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(userActionTypes.SIGN_OUT_SUCCESS,clearCartOnSignOut);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function cartSaga(){return _regeneratorRuntime.wrap(function cartSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(onSignOutSuccess)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["D:/learn/shop-clothing/client/src/redux/cart/cart.sagas.js"],"names":["clearCartOnSignOut","onSignOutSuccess","cartSaga","takeLatest","call","all","put","userActionTypes","clearCart","SIGN_OUT_SUCCESS"],"mappings":"qMAKiBA,kB,iDAIAC,gB,iDAOAC,Q,EAhBjB,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,CAAgCC,GAAhC,KAA2C,oBAA3C,CAEA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,OAASC,SAAT,KAA0B,gBAA1B,CAEA,MAAO,SAAUR,CAAAA,kBAAV,8IACH,MAAMM,CAAAA,GAAG,CAACE,SAAS,EAAV,CAAT,CADG,sDAIP,MAAO,SAAUP,CAAAA,gBAAV,gJACH,MAAME,CAAAA,UAAU,CACZI,eAAe,CAACE,gBADJ,CAEZT,kBAFY,CAAhB,CADG,wDAOP,MAAO,SAAUE,CAAAA,QAAV,wIACH,MAAMG,CAAAA,GAAG,CAAC,CAACD,IAAI,CAACH,gBAAD,CAAL,CAAD,CAAT,CADG","sourcesContent":["import { takeLatest, call, all, put } from 'redux-saga/effects';\r\n\r\nimport userActionTypes from '../user/user.types';\r\nimport { clearCart } from './cart.actions';\r\n\r\nexport function* clearCartOnSignOut() {\r\n    yield put(clearCart())\r\n}\r\n\r\nexport function* onSignOutSuccess() {\r\n    yield takeLatest(\r\n        userActionTypes.SIGN_OUT_SUCCESS,\r\n        clearCartOnSignOut\r\n    )\r\n}\r\n\r\nexport function* cartSaga() {\r\n    yield all([call(onSignOutSuccess)])\r\n}"]},"metadata":{},"sourceType":"module"}