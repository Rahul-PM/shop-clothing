{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {// try {\n  //     const userRef = yield call(createUserProfileDocument, userAuth);\n  //     const userSnapshot = yield userRef.get();\n  //     yield put(\n  //         signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n  //     );\n  // } catch (error) {\n  //     yield put(signInFailure(error.message));\n  // }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["D:/learn/shop-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","getSnapshotFromUserAuth","userAuth","signInWithGoogle","user","signInWithPopup","id","userSnapshot","data","error","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","userRef","get","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C,CAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACD,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAvB;AACA,UAAMI,uBAAuB,CAACG,IAAD,CAA7B;AACA,UAAMZ,GAAG,CACLO,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEC,YAAY,CAACD,EAAnB;AAAuB,SAAGC,YAAY,CAACC,IAAb;AAA1B,KAAD,CADR,CAAT;AAGH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAK,CAACC,OAAP,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAE/D,MAAI;AACA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAME,OAAO,GAAG,MAAMtB,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMS,OAAO,CAACC,GAAR,EAA3B;AACA,UAAMzB,GAAG,CACLO,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEC,YAAY,CAACD,EAAnB;AAAuB,SAAGC,YAAY,CAACC,IAAb;AAA1B,KAAD,CADR,CAAT;AAGH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAK,CAACC,OAAP,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUQ,mBAAV,GAAgC;AACnC,QAAM3B,UAAU,CACZI,eAAe,CAACwB,oBADJ,EAEZhB,gBAFY,CAAhB;AAIH;AAED,OAAO,UAAUiB,kBAAV,GAA+B;AAClC,QAAM7B,UAAU,CACZI,eAAe,CAAC0B,mBADJ,EAEZV,eAFY,CAAhB;AAIH;AAED,OAAO,UAAUW,QAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACwB,mBAAD,CAAL,EAA4BxB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nimport { signInSuccess, signInFailure } from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    // try {\r\n    //     const userRef = yield call(createUserProfileDocument, userAuth);\r\n    //     const userSnapshot = yield userRef.get();\r\n    //     yield put(\r\n    //         signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n    //     );\r\n    // } catch (error) {\r\n    //     yield put(signInFailure(error.message));\r\n    // }\r\n}\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n        yield put(\r\n            signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n        );\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n        );\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n    );\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}