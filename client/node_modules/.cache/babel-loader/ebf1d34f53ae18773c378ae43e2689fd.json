{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    console.log('success');\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUpWithEmail(credentials) {\n  try {\n    const {\n      displayName,\n      email,\n      password\n    } = credentials;\n  } catch (error) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["D:/learn/shop-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","console","log","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUpWithEmail","credentials","displayName","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport {\r\n    auth,\r\n    googleProvider,\r\n    createUserProfileDocument,\r\n    getCurrentUser\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess } from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        console.log('success')\r\n        yield put(\r\n            signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n        );\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signUpWithEmail(credentials) {\r\n    try {\r\n        const { displayName, email, password } = credentials;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n    );\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(\r\n        UserActionTypes.CHECK_USER_SESSION,\r\n        isUserAuthenticated\r\n    );\r\n}\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_OUT_START,\r\n        signOut\r\n    );\r\n}\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_UP_START,\r\n        signUpWithEmail\r\n    );\r\n}\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}