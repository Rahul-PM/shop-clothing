{"ast":null,"code":"import { shopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMaps } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetCollectionsSuccess = collecionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collecionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart);\n    collectionRef.get().then(snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMaps(snapShot);\n      dispatch(fetCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["D:/learn/shop-clothing/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMaps","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetCollectionsSuccess","collecionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapShot","collectionsMap","catch","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,EAAoBC,gCAApB,QAA4D,+BAA5D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,qBAAqB,GAAGC,aAAa,KAAK;AACnDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD6B;AAEnDC,EAAAA,OAAO,EAAEF;AAF0C,CAAL,CAA3C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAD,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,cAAc,GAAGlB,gCAAgC,CAACiB,QAAD,CAAvD;AACAL,MAAAA,QAAQ,CAACR,qBAAqB,CAACc,cAAD,CAAtB,CAAR;AACH,KAHD,EAIKC,KAJL,CAIWC,KAAK,IAAIR,QAAQ,CAACJ,uBAAuB,CAACY,KAAD,CAAxB,CAJ5B;AAKH,GATD;AAUH,CAXM","sourcesContent":["import { shopActionTypes } from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMaps } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetCollectionsSuccess = collecionsMap => ({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collecionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart);\r\n\r\n        collectionRef.get().then(snapShot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMaps(snapShot);\r\n            dispatch(fetCollectionsSuccess(collectionsMap));\r\n        })\r\n            .catch(error => dispatch(fetchCollectionsFailure(error)))\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}