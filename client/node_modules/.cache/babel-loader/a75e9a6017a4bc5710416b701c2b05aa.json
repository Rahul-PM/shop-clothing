{"ast":null,"code":"var _jsxFileName = \"D:\\\\learn\\\\shop-clothing\\\\src\\\\pages\\\\shop\\\\shop.components.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../../pages/collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { selectedIsCollectionLoaded } from '../../redux/shop/shop.selector';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  IsCollectionLoaded,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: !IsCollectionLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapPropToState = createStructuredSelector({\n  IsCollectionLoaded: selectedIsCollectionLoaded\n});\n\nconst mapDispatchToPtops = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapPropToState, mapDispatchToPtops)(ShopPage);","map":{"version":3,"sources":["D:/learn/shop-clothing/src/pages/shop/shop.components.jsx"],"names":["React","useEffect","Route","connect","createStructuredSelector","CollectionsOverviewContainer","CollectionPage","WithSpinner","selectedIsCollectionLoaded","fetchCollectionsStart","CollectionPageWithSpinner","ShopPage","match","IsCollectionLoaded","path","props","mapPropToState","mapDispatchToPtops","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AAGA,MAAMC,yBAAyB,GAAGH,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMK,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,kBAAT;AAA6BJ,EAAAA;AAA7B,CAAD,KAA0D;AAEvER,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,qBAAqB;AACxB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAET,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEO,KAAK,CAACE,IAAK,gBAA3B;AAA4C,IAAA,MAAM,EAAGC,KAAD,iBAChD,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAE,CAACF;AAAvC,OAA+DE,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAUH,CAhBD;;AAkBA,MAAMC,cAAc,GAAGZ,wBAAwB,CAAC;AAC5CS,EAAAA,kBAAkB,EAAEL;AADwB,CAAD,CAA/C;;AAGA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,qBAAqB,EAAE,MAAMS,QAAQ,CAACT,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAGA,eAAeN,OAAO,CAACa,cAAD,EAClBC,kBADkB,CAAP,CACSN,QADT,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPage from '../../pages/collection/collection.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport { selectedIsCollectionLoaded } from '../../redux/shop/shop.selector';\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n\r\n\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nconst ShopPage = ({ match, IsCollectionLoaded, fetchCollectionsStart }) => {\r\n\r\n    useEffect(() => {\r\n        fetchCollectionsStart();\r\n    }, [fetchCollectionsStart]);\r\n\r\n    return (\r\n        <div className='shop-page'>\r\n            <Route exact path={`${match.path}`} component={CollectionsOverviewContainer}\r\n            />\r\n            <Route path={`${match.path}/:collectionId`} render={(props) =>\r\n                <CollectionPageWithSpinner isLoading={!IsCollectionLoaded} {...props} />}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapPropToState = createStructuredSelector({\r\n    IsCollectionLoaded: selectedIsCollectionLoaded\r\n});\r\nconst mapDispatchToPtops = dispatch => ({\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\nexport default connect(mapPropToState,\r\n    mapDispatchToPtops)(ShopPage);"]},"metadata":{},"sourceType":"module"}